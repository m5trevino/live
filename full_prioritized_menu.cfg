# --- FlintX Custom Debian Loader (PRIORITIZED FLAT MENU) ---

set timeout=20
set menu_color_normal=white/black
set menu_color_highlight=green/black
set pagination=1 # Good for long menus

# Variables
set flintx_target_uuid="36aa1f36-2bcd-4177-89d9-da23d478718e"
set flintx_config_path_on_debian="boot/grub_configs"

menuentry "--- FlintX Debian Boot Options (Prioritized) ---" --class=header {}
menuentry '' --class=spacer {} # Spacer

# --- === PRIORITIZED ENTRIES === ---
menuentry '[NV-TARGET] Boot Nvidia GUI (Default)' --class nvidia {
    echo "Loading modules..." ; insmod part_gpt ; insmod ext2 ; insmod ext4
    echo "Searching for UUID: ${flintx_target_uuid}..."
    if search --no-floppy --fs-uuid --set=debian_root "${flintx_target_uuid}" ; then
        echo "Found Debian root at ($debian_root)"
        target_cfg="($debian_root)/${flintx_config_path_on_debian}/debian_gui_nvidia_quiet.cfg"
        echo "Checking for ${target_cfg}..."
        if test -e "${target_cfg}"; then echo "Loading ${target_cfg}..."; configfile "${target_cfg}"; echo "ERROR: Configfile finished."; sleep 5; else echo "ERROR: Snippet NOT FOUND: ${target_cfg}"; sleep 5; fi
    else echo "ERROR: Debian UUID ${flintx_target_uuid} NOT FOUND!"; sleep 5; fi
    echo "Returning..."; sleep 2
}
menuentry '[FB-GUI] Boot GUI with NOMODESET (Safe Mode)' --class fallback {
    echo "Loading modules..." ; insmod part_gpt ; insmod ext2 ; insmod ext4
    echo "Searching for UUID: ${flintx_target_uuid}..."
    if search --no-floppy --fs-uuid --set=debian_root "${flintx_target_uuid}" ; then
        echo "Found Debian root at ($debian_root)"
        target_cfg="($debian_root)/${flintx_config_path_on_debian}/debian_gui_nomodeset.cfg"
        echo "Checking for ${target_cfg}..."
        if test -e "${target_cfg}"; then echo "Loading ${target_cfg}..."; configfile "${target_cfg}"; echo "ERROR: Configfile finished."; sleep 5; else echo "ERROR: Snippet NOT FOUND: ${target_cfg}"; sleep 5; fi
    else echo "ERROR: Debian UUID ${flintx_target_uuid} NOT FOUND!"; sleep 5; fi
    echo "Returning..."; sleep 2
}
menuentry '[FB-TTY-NV] Boot Text Mode (Nvidia Active)' --class tty {
    echo "Loading modules..." ; insmod part_gpt ; insmod ext2 ; insmod ext4
    echo "Searching for UUID: ${flintx_target_uuid}..."
    if search --no-floppy --fs-uuid --set=debian_root "${flintx_target_uuid}" ; then
        echo "Found Debian root at ($debian_root)"
        target_cfg="($debian_root)/${flintx_config_path_on_debian}/debian_tty_nvidia.cfg"
        echo "Checking for ${target_cfg}..."
        if test -e "${target_cfg}"; then echo "Loading ${target_cfg}..."; configfile "${target_cfg}"; echo "ERROR: Configfile finished."; sleep 5; else echo "ERROR: Snippet NOT FOUND: ${target_cfg}"; sleep 5; fi
    else echo "ERROR: Debian UUID ${flintx_target_uuid} NOT FOUND!"; sleep 5; fi
    echo "Returning..."; sleep 2
}
menuentry '[FB-TTY-BASIC] Boot Text Mode (Nomodeset, ND)' --class recovery {
    echo "Loading modules..." ; insmod part_gpt ; insmod ext2 ; insmod ext4
    echo "Searching for UUID: ${flintx_target_uuid}..."
    if search --no-floppy --fs-uuid --set=debian_root "${flintx_target_uuid}" ; then
        echo "Found Debian root at ($debian_root)"
        target_cfg="($debian_root)/${flintx_config_path_on_debian}/debian_tty_nomodeset_nouveau_disabled.cfg"
        echo "Checking for ${target_cfg}..."
        if test -e "${target_cfg}"; then echo "Loading ${target_cfg}..."; configfile "${target_cfg}"; echo "ERROR: Configfile finished."; sleep 5; else echo "ERROR: Snippet NOT FOUND: ${target_cfg}"; sleep 5; fi
    else echo "ERROR: Debian UUID ${flintx_target_uuid} NOT FOUND!"; sleep 5; fi
    echo "Returning..."; sleep 2
}

menuentry '' --class=spacer {}
menuentry "--- === ALL OTHER ENTRIES === ---" --class=header {}
menuentry '' --class=spacer {}

# --- Other GUI Entries ---
menuentry '[GUI] Nvidia Quiet Sysrq' --class nvidia {
    echo "Loading modules..." ; insmod part_gpt ; insmod ext2 ; insmod ext4
    echo "Searching for UUID: ${flintx_target_uuid}..."
    if search --no-floppy --fs-uuid --set=debian_root "${flintx_target_uuid}" ; then
        echo "Found Debian root at ($debian_root)"
        target_cfg="($debian_root)/${flintx_config_path_on_debian}/debian_gui_nvidia_quiet_sysrq.cfg"
        echo "Checking for ${target_cfg}..."
        if test -e "${target_cfg}"; then echo "Loading ${target_cfg}..."; configfile "${target_cfg}"; echo "ERROR: Configfile finished."; sleep 5; else echo "ERROR: Snippet NOT FOUND: ${target_cfg}"; sleep 5; fi
    else echo "ERROR: Debian UUID ${flintx_target_uuid} NOT FOUND!"; sleep 5; fi
    echo "Returning..."; sleep 2
}
menuentry '[GUI] Nvidia Verbose' --class nvidia {
    echo "Loading modules..." ; insmod part_gpt ; insmod ext2 ; insmod ext4
    echo "Searching for UUID: ${flintx_target_uuid}..."
    if search --no-floppy --fs-uuid --set=debian_root "${flintx_target_uuid}" ; then
        echo "Found Debian root at ($debian_root)"
        target_cfg="($debian_root)/${flintx_config_path_on_debian}/debian_gui_nvidia_verbose.cfg"
        echo "Checking for ${target_cfg}..."
        if test -e "${target_cfg}"; then echo "Loading ${target_cfg}..."; configfile "${target_cfg}"; echo "ERROR: Configfile finished."; sleep 5; else echo "ERROR: Snippet NOT FOUND: ${target_cfg}"; sleep 5; fi
    else echo "ERROR: Debian UUID ${flintx_target_uuid} NOT FOUND!"; sleep 5; fi
    echo "Returning..."; sleep 2
}
menuentry '[GUI] Nouveau Quiet' --class debian {
    echo "Loading modules..." ; insmod part_gpt ; insmod ext2 ; insmod ext4
    echo "Searching for UUID: ${flintx_target_uuid}..."
    if search --no-floppy --fs-uuid --set=debian_root "${flintx_target_uuid}" ; then
        echo "Found Debian root at ($debian_root)"
        target_cfg="($debian_root)/${flintx_config_path_on_debian}/debian_gui_nouveau_quiet.cfg"
        echo "Checking for ${target_cfg}..."
        if test -e "${target_cfg}"; then echo "Loading ${target_cfg}..."; configfile "${target_cfg}"; echo "ERROR: Configfile finished."; sleep 5; else echo "ERROR: Snippet NOT FOUND: ${target_cfg}"; sleep 5; fi
    else echo "ERROR: Debian UUID ${flintx_target_uuid} NOT FOUND!"; sleep 5; fi
    echo "Returning..."; sleep 2
}
menuentry '[GUI] Nouveau Verbose' --class debian {
    echo "Loading modules..." ; insmod part_gpt ; insmod ext2 ; insmod ext4
    echo "Searching for UUID: ${flintx_target_uuid}..."
    if search --no-floppy --fs-uuid --set=debian_root "${flintx_target_uuid}" ; then
        echo "Found Debian root at ($debian_root)"
        target_cfg="($debian_root)/${flintx_config_path_on_debian}/debian_gui_nouveau_verbose.cfg"
        echo "Checking for ${target_cfg}..."
        if test -e "${target_cfg}"; then echo "Loading ${target_cfg}..."; configfile "${target_cfg}"; echo "ERROR: Configfile finished."; sleep 5; else echo "ERROR: Snippet NOT FOUND: ${target_cfg}"; sleep 5; fi
    else echo "ERROR: Debian UUID ${flintx_target_uuid} NOT FOUND!"; sleep 5; fi
    echo "Returning..."; sleep 2
}
menuentry '[GUI] Nomodeset NoEFIFB' --class fallback {
    echo "Loading modules..." ; insmod part_gpt ; insmod ext2 ; insmod ext4
    echo "Searching for UUID: ${flintx_target_uuid}..."
    if search --no-floppy --fs-uuid --set=debian_root "${flintx_target_uuid}" ; then
        echo "Found Debian root at ($debian_root)"
        target_cfg="($debian_root)/${flintx_config_path_on_debian}/debian_gui_nomodeset_noefifb.cfg"
        echo "Checking for ${target_cfg}..."
        if test -e "${target_cfg}"; then echo "Loading ${target_cfg}..."; configfile "${target_cfg}"; echo "ERROR: Configfile finished."; sleep 5; else echo "ERROR: Snippet NOT FOUND: ${target_cfg}"; sleep 5; fi
    else echo "ERROR: Debian UUID ${flintx_target_uuid} NOT FOUND!"; sleep 5; fi
    echo "Returning..."; sleep 2
}
menuentry '[GUI] Nvidia Intel Pstate Disabled' --class nvidia {
    echo "Loading modules..." ; insmod part_gpt ; insmod ext2 ; insmod ext4
    echo "Searching for UUID: ${flintx_target_uuid}..."
    if search --no-floppy --fs-uuid --set=debian_root "${flintx_target_uuid}" ; then
        echo "Found Debian root at ($debian_root)"
        target_cfg="($debian_root)/${flintx_config_path_on_debian}/debian_gui_nvidia_intel_pstate_disabled.cfg"
        echo "Checking for ${target_cfg}..."
        if test -e "${target_cfg}"; then echo "Loading ${target_cfg}..."; configfile "${target_cfg}"; echo "ERROR: Configfile finished."; sleep 5; else echo "ERROR: Snippet NOT FOUND: ${target_cfg}"; sleep 5; fi
    else echo "ERROR: Debian UUID ${flintx_target_uuid} NOT FOUND!"; sleep 5; fi
    echo "Returning..."; sleep 2
}
menuentry '[GUI] Nvidia Max Cstate 1' --class nvidia {
    echo "Loading modules..." ; insmod part_gpt ; insmod ext2 ; insmod ext4
    echo "Searching for UUID: ${flintx_target_uuid}..."
    if search --no-floppy --fs-uuid --set=debian_root "${flintx_target_uuid}" ; then
        echo "Found Debian root at ($debian_root)"
        target_cfg="($debian_root)/${flintx_config_path_on_debian}/debian_gui_nvidia_max_cstate_1.cfg"
        echo "Checking for ${target_cfg}..."
        if test -e "${target_cfg}"; then echo "Loading ${target_cfg}..."; configfile "${target_cfg}"; echo "ERROR: Configfile finished."; sleep 5; else echo "ERROR: Snippet NOT FOUND: ${target_cfg}"; sleep 5; fi
    else echo "ERROR: Debian UUID ${flintx_target_uuid} NOT FOUND!"; sleep 5; fi
    echo "Returning..."; sleep 2
}
menuentry '[GUI] Nvidia Pcie Aspm Off' --class nvidia {
    echo "Loading modules..." ; insmod part_gpt ; insmod ext2 ; insmod ext4
    echo "Searching for UUID: ${flintx_target_uuid}..."
    if search --no-floppy --fs-uuid --set=debian_root "${flintx_target_uuid}" ; then
        echo "Found Debian root at ($debian_root)"
        target_cfg="($debian_root)/${flintx_config_path_on_debian}/debian_gui_nvidia_pcie_aspm_off.cfg"
        echo "Checking for ${target_cfg}..."
        if test -e "${target_cfg}"; then echo "Loading ${target_cfg}..."; configfile "${target_cfg}"; echo "ERROR: Configfile finished."; sleep 5; else echo "ERROR: Snippet NOT FOUND: ${target_cfg}"; sleep 5; fi
    else echo "ERROR: Debian UUID ${flintx_target_uuid} NOT FOUND!"; sleep 5; fi
    echo "Returning..."; sleep 2
}
menuentry '' --class=spacer {} # Spacer

# --- Other TTY Entries ---
menuentry '[TTY] Nouveau Enabled' --class debian {
    echo "Loading modules..." ; insmod part_gpt ; insmod ext2 ; insmod ext4
    echo "Searching for UUID: ${flintx_target_uuid}..."
    if search --no-floppy --fs-uuid --set=debian_root "${flintx_target_uuid}" ; then
        echo "Found Debian root at ($debian_root)"
        target_cfg="($debian_root)/${flintx_config_path_on_debian}/debian_tty_nouveau_enabled.cfg"
        echo "Checking for ${target_cfg}..."
        if test -e "${target_cfg}"; then echo "Loading ${target_cfg}..."; configfile "${target_cfg}"; echo "ERROR: Configfile finished."; sleep 5; else echo "ERROR: Snippet NOT FOUND: ${target_cfg}"; sleep 5; fi
    else echo "ERROR: Debian UUID ${flintx_target_uuid} NOT FOUND!"; sleep 5; fi
    echo "Returning..."; sleep 2
}
menuentry '[TTY] Nouveau Disabled (ND)' --class debian {
    echo "Loading modules..." ; insmod part_gpt ; insmod ext2 ; insmod ext4
    echo "Searching for UUID: ${flintx_target_uuid}..."
    if search --no-floppy --fs-uuid --set=debian_root "${flintx_target_uuid}" ; then
        echo "Found Debian root at ($debian_root)"
        target_cfg="($debian_root)/${flintx_config_path_on_debian}/debian_tty_nouveau_disabled.cfg"
        echo "Checking for ${target_cfg}..."
        if test -e "${target_cfg}"; then echo "Loading ${target_cfg}..."; configfile "${target_cfg}"; echo "ERROR: Configfile finished."; sleep 5; else echo "ERROR: Snippet NOT FOUND: ${target_cfg}"; sleep 5; fi
    else echo "ERROR: Debian UUID ${flintx_target_uuid} NOT FOUND!"; sleep 5; fi
    echo "Returning..."; sleep 2
}
menuentry '' --class=spacer {} # Spacer

# --- Debug / Recovery Entries ---
 menuentry '[DBG] GUI Nvidia DRM Debug' --class nvidia {
    echo "Loading modules..." ; insmod part_gpt ; insmod ext2 ; insmod ext4
    echo "Searching for UUID: ${flintx_target_uuid}..."
    if search --no-floppy --fs-uuid --set=debian_root "${flintx_target_uuid}" ; then
        echo "Found Debian root at ($debian_root)"
        target_cfg="($debian_root)/${flintx_config_path_on_debian}/debian_gui_nvidia_drm_debug.cfg"
        echo "Checking for ${target_cfg}..."
        if test -e "${target_cfg}"; then echo "Loading ${target_cfg}..."; configfile "${target_cfg}"; echo "ERROR: Configfile finished."; sleep 5; else echo "ERROR: Snippet NOT FOUND: ${target_cfg}"; sleep 5; fi
    else echo "ERROR: Debian UUID ${flintx_target_uuid} NOT FOUND!"; sleep 5; fi
    echo "Returning..."; sleep 2
}
 menuentry '[DBG] GUI Nouveau DRM Debug' --class debug {
    echo "Loading modules..." ; insmod part_gpt ; insmod ext2 ; insmod ext4
    echo "Searching for UUID: ${flintx_target_uuid}..."
    if search --no-floppy --fs-uuid --set=debian_root "${flintx_target_uuid}" ; then
        echo "Found Debian root at ($debian_root)"
        target_cfg="($debian_root)/${flintx_config_path_on_debian}/debian_gui_nouveau_drm_debug.cfg"
        echo "Checking for ${target_cfg}..."
        if test -e "${target_cfg}"; then echo "Loading ${target_cfg}..."; configfile "${target_cfg}"; echo "ERROR: Configfile finished."; sleep 5; else echo "ERROR: Snippet NOT FOUND: ${target_cfg}"; sleep 5; fi
    else echo "ERROR: Debian UUID ${flintx_target_uuid} NOT FOUND!"; sleep 5; fi
    echo "Returning..."; sleep 2
}
 menuentry '[DBG] TTY Debug' --class tty {
    echo "Loading modules..." ; insmod part_gpt ; insmod ext2 ; insmod ext4
    echo "Searching for UUID: ${flintx_target_uuid}..."
    if search --no-floppy --fs-uuid --set=debian_root "${flintx_target_uuid}" ; then
        echo "Found Debian root at ($debian_root)"
        target_cfg="($debian_root)/${flintx_config_path_on_debian}/debian_tty_debug.cfg"
        echo "Checking for ${target_cfg}..."
        if test -e "${target_cfg}"; then echo "Loading ${target_cfg}..."; configfile "${target_cfg}"; echo "ERROR: Configfile finished."; sleep 5; else echo "ERROR: Snippet NOT FOUND: ${target_cfg}"; sleep 5; fi
    else echo "ERROR: Debian UUID ${flintx_target_uuid} NOT FOUND!"; sleep 5; fi
    echo "Returning..."; sleep 2
}
 menuentry '[DBG] TTY Debug Sysrq' --class tty {
    echo "Loading modules..." ; insmod part_gpt ; insmod ext2 ; insmod ext4
    echo "Searching for UUID: ${flintx_target_uuid}..."
    if search --no-floppy --fs-uuid --set=debian_root "${flintx_target_uuid}" ; then
        echo "Found Debian root at ($debian_root)"
        target_cfg="($debian_root)/${flintx_config_path_on_debian}/debian_tty_debug_sysrq.cfg"
        echo "Checking for ${target_cfg}..."
        if test -e "${target_cfg}"; then echo "Loading ${target_cfg}..."; configfile "${target_cfg}"; echo "ERROR: Configfile finished."; sleep 5; else echo "ERROR: Snippet NOT FOUND: ${target_cfg}"; sleep 5; fi
    else echo "ERROR: Debian UUID ${flintx_target_uuid} NOT FOUND!"; sleep 5; fi
    echo "Returning..."; sleep 2
}
menuentry '[REC] Recovery Basic' --class recovery {
    echo "Loading modules..." ; insmod part_gpt ; insmod ext2 ; insmod ext4
    echo "Searching for UUID: ${flintx_target_uuid}..."
    if search --no-floppy --fs-uuid --set=debian_root "${flintx_target_uuid}" ; then
        echo "Found Debian root at ($debian_root)"
        target_cfg="($debian_root)/${flintx_config_path_on_debian}/debian_recovery_basic.cfg"
        echo "Checking for ${target_cfg}..."
        if test -e "${target_cfg}"; then echo "Loading ${target_cfg}..."; configfile "${target_cfg}"; echo "ERROR: Configfile finished."; sleep 5; else echo "ERROR: Snippet NOT FOUND: ${target_cfg}"; sleep 5; fi
    else echo "ERROR: Debian UUID ${flintx_target_uuid} NOT FOUND!"; sleep 5; fi
    echo "Returning..."; sleep 2
}
menuentry '[REC] Recovery Nomodeset' --class recovery {
    echo "Loading modules..." ; insmod part_gpt ; insmod ext2 ; insmod ext4
    echo "Searching for UUID: ${flintx_target_uuid}..."
    if search --no-floppy --fs-uuid --set=debian_root "${flintx_target_uuid}" ; then
        echo "Found Debian root at ($debian_root)"
        target_cfg="($debian_root)/${flintx_config_path_on_debian}/debian_recovery_nomodeset.cfg"
        echo "Checking for ${target_cfg}..."
        if test -e "${target_cfg}"; then echo "Loading ${target_cfg}..."; configfile "${target_cfg}"; echo "ERROR: Configfile finished."; sleep 5; else echo "ERROR: Snippet NOT FOUND: ${target_cfg}"; sleep 5; fi
    else echo "ERROR: Debian UUID ${flintx_target_uuid} NOT FOUND!"; sleep 5; fi
    echo "Returning..."; sleep 2
}
menuentry '' --class=spacer {} # Spacer

# --- Main Return Entry ---
menuentry '<-- Return to Ventoy Main Menu [Esc]' --class=vtoyret VTOY_RET {}

